package admin;

import config.Session;
import config.dbConnector;
import java.awt.Color;
import static java.awt.Color.gray;
import static java.awt.Color.green;
import static java.awt.Color.white;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.nio.file.StandardCopyOption;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vilma Gaming
 */
public class Orders extends javax.swing.JFrame {

    private int rowindex;

    /**
     * Creates new form userPage
     */
    public Orders() {
        initComponents();
        displayData();
    }
    
    public  String destination = "";
    File selectedfile;
    public String oldpath;
    public String path;
    public String img;
    public String ImageIcon;
    
    boolean Checkadd = true; 
   public int FileExistenceChecker(String path){
        File file = new File(path);
        String fileName = file.getName();
        
        Path filePath = Paths.get("src/userimages", fileName);
        boolean fileExists = Files.exists(filePath);
        
        if (fileExists) {
            return 1;
        } else {
            return 0;
        }
    
    }
    
    
   public ImageIcon ResizeImage(String imagePath, byte[] imageBytes, JLabel label) {
    ImageIcon myImage;

    if (imagePath != null) {
        myImage = new ImageIcon(imagePath);
    } else {
        myImage = new ImageIcon(imageBytes);
    }

    Image img = myImage.getImage();
    Image newImg = img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);

    return new ImageIcon(newImg);
}

        
        public void displayData(){
      try{
          dbConnector dbc = new dbConnector();
          ResultSet rs = dbc .getData("SELECT u_id, u_name FROM tbl_user");
          cus.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();   
      }catch(SQLException ex){
         System.out.println("Errors:"+ex.getMessage());
    }
      
      try{
          dbConnector dbc = new dbConnector();
          ResultSet rs = dbc .getData("SELECT id, pname, price FROM products");
          prod.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();   
      }catch(SQLException ex){
         System.out.println("Errors:"+ex.getMessage());
    }
      
      try{
          dbConnector dbc = new dbConnector();
          ResultSet rs = dbc .getData("SELECT id, cname, pname, quant, amount, date, status FROM orders");
          Orders.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();
   
      }catch(SQLException ex){
         System.out.println("Errors:"+ex.getMessage());
    }
    }
         public void imageUpdater(String existingFilePath, String newFilePath){
        File existingFile = new File(existingFilePath);
        if (existingFile.exists()) {
            String parentDirectory = existingFile.getParent();
            File newFile = new File(newFilePath);
            String newFileName = newFile.getName();
            File updatedFile = new File(parentDirectory, newFileName);
            existingFile.delete();
            try {
                Files.copy(newFile.toPath(), updatedFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
                System.out.println("Image updated successfully.");
            } catch (IOException e) {
                System.out.println("Error occurred while updating the image: "+e);
            }
        } else {
            try{
                Files.copy(selectedfile.toPath(), new File(destination).toPath(), StandardCopyOption.REPLACE_EXISTING);
            }catch(IOException e){
                System.out.println("Error on update!");
            }
        }
   }
        
   
     Color narv=new Color(102,102,255);
    Color head=new Color(153,153,255);
    Color bodyc=new Color(204,204,255);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        narvar = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        us_id = new javax.swing.JLabel();
        print = new javax.swing.JLabel();
        up = new javax.swing.JLabel();
        dlt = new javax.swing.JLabel();
        addlbl = new javax.swing.JLabel();
        clear = new javax.swing.JLabel();
        status = new javax.swing.JLabel();
        stats = new javax.swing.JComboBox<>();
        p = new javax.swing.JLabel();
        cn = new javax.swing.JTextField();
        pn = new javax.swing.JTextField();
        n = new javax.swing.JLabel();
        g = new javax.swing.JLabel();
        qn = new javax.swing.JTextField();
        jPanel3 = new javax.swing.JPanel();
        image = new javax.swing.JLabel();
        select = new javax.swing.JButton();
        remove = new javax.swing.JButton();
        g1 = new javax.swing.JLabel();
        ap = new javax.swing.JTextField();
        g2 = new javax.swing.JLabel();
        date = new javax.swing.JTextField();
        id = new javax.swing.JTextField();
        p1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Orders = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        cus = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        prod = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 30)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("ORDERS");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(10, 0, 140, 50);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1);
        jLabel1.setBounds(440, 0, 60, 50);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 520, 50));

        narvar.setBackground(new java.awt.Color(255, 255, 255));
        narvar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel5.setBackground(new java.awt.Color(51, 255, 255));
        jPanel5.setLayout(null);

        us_id.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        us_id.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        us_id.setText("USER");
        jPanel5.add(us_id);
        us_id.setBounds(10, 80, 110, 40);

        narvar.add(jPanel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 130, 130));

        print.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        print.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        print.setText("PRINT");
        print.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                printMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                printMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                printMouseExited(evt);
            }
        });
        narvar.add(print, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 490, 170, 30));

        up.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        up.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        up.setText("UPDATE");
        up.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                upMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                upMouseExited(evt);
            }
        });
        narvar.add(up, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 381, 170, 40));

        dlt.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        dlt.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dlt.setText("DELETE");
        dlt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                dltMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                dltMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                dltMouseExited(evt);
            }
        });
        narvar.add(dlt, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 330, 170, 40));

        addlbl.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        addlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addlbl.setText("ADD");
        addlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addlblMouseExited(evt);
            }
        });
        narvar.add(addlbl, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 280, 170, 40));

        clear.setFont(new java.awt.Font("Arial Black", 1, 18)); // NOI18N
        clear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clear.setText("Clear");
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearMouseExited(evt);
            }
        });
        narvar.add(clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 436, 170, 40));

        jPanel1.add(narvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 700));

        status.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        status.setText("Status:");
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 650, 120, 30));

        stats.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Completed", "Pending", " " }));
        jPanel1.add(stats, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 650, 160, 30));

        p.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        p.setText("Customer's Name:");
        jPanel1.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 430, 120, 30));

        cn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        cn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(cn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 430, 160, 30));

        pn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(pn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 480, 160, 30));

        n.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        n.setText("Product's Name:");
        jPanel1.add(n, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 480, 110, 30));

        g.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        g.setText("Quantity:");
        jPanel1.add(g, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 530, 120, 30));

        qn.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        qn.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(qn, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 530, 160, 30));

        jPanel3.setLayout(null);

        image.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jPanel3.add(image);
        image.setBounds(10, 10, 160, 190);

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 390, 180, 210));

        select.setBackground(new java.awt.Color(153, 153, 255));
        select.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        select.setText("SELECT");
        select.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selectActionPerformed(evt);
            }
        });
        jPanel1.add(select, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 630, 70, 30));

        remove.setBackground(new java.awt.Color(153, 153, 255));
        remove.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        remove.setText("REMOVE");
        remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeActionPerformed(evt);
            }
        });
        jPanel1.add(remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 630, 80, 30));

        g1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        g1.setText("Amount Paid:");
        jPanel1.add(g1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 570, 120, 30));

        ap.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        ap.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(ap, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 570, 160, 30));

        g2.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        g2.setText("Date Ordered:");
        jPanel1.add(g2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 610, 120, 30));

        date.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        date.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(date, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 610, 160, 30));

        id.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        id.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        id.setEnabled(false);
        jPanel1.add(id, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 380, 160, 30));

        p1.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        p1.setText("ID:");
        jPanel1.add(p1, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 380, 120, 30));

        Orders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Orders);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 230, 410, 140));

        cus.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cusMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(cus);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(180, 60, 240, 160));

        prod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(prod);

        jPanel1.add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 60, 240, 160));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 691, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
      admindashboard ad = new admindashboard();
      ad.setVisible(true);
      this.dispose();
    }//GEN-LAST:event_jLabel1MouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
       
    }//GEN-LAST:event_formWindowActivated

    private void printMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseClicked
   int rowIndex = Orders.getSelectedRow();

        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel tbl = Orders.getModel();
                String query = "SELECT * FROM orders WHERE id = '" + tbl.getValueAt(rowIndex, 0) + "'";
                ResultSet rs = dbc.getData(query);
                if (rs.next()) {
                    
                    individualprinting ip = new individualprinting();
                    ip.id.setText(rs.getString("id"));
                    ip.cn.setText(rs.getString("cname"));
                    ip.an.setText(rs.getString("pname"));
                    ip.pn.setText(rs.getString("quant"));
                    ip.qn.setText(rs.getString("amount"));
                    ip.ap.setText(rs.getString("date"));
                    ip.st.setText(rs.getString("status"));
                   
                    ip.setVisible(true);
                    this.dispose();
                }
            } catch (SQLException ex) {
                System.out.println("Errors: " + ex.getMessage());
            }
        }        
    }//GEN-LAST:event_printMouseClicked

    private void printMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseEntered
        print.setBackground(head);
    }//GEN-LAST:event_printMouseEntered

    private void printMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_printMouseExited
        print.setBackground(narv);
    }//GEN-LAST:event_printMouseExited

    private void selectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selectActionPerformed
      
    }//GEN-LAST:event_selectActionPerformed

    private void removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeActionPerformed
        select.setEnabled(true);
        remove.setEnabled(false);
       
    }//GEN-LAST:event_removeActionPerformed

    private void addlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseExited
        addlbl.setBackground(narv);
    }//GEN-LAST:event_addlblMouseExited

    private void addlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseEntered
      addlbl.setBackground(head);
    }//GEN-LAST:event_addlblMouseEntered

    private void addlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseClicked
    if(Checkadd){
      if(cn.getText().isEmpty()||pn.getText().isEmpty()||qn.getText().isEmpty()||ap.getText().isEmpty()
          ||date.getText().isEmpty()){
             JOptionPane.showMessageDialog(null,"All Fields are Required");
           }else{
                dbConnector dbc = new dbConnector();
                dbc.insertData("INSERT INTO orders(pname, price, quantity, category, status)"
                   + "VALUES('"+cn.getText()+"', '"+pn.getText()+"', '"+qn.getText()+"', '"+ap.getText()+"', '"+date.getText()+"', '"+stats.getSelectedItem()+"')");
                JOptionPane.showMessageDialog(null,"Successfully Added!");
                
                displayData();
                Checkadd = (false);
                addlbl.setForeground(green);
           
                cn.setText("");
                pn.setText("");
                cn.setText("");
                qn.setText("");
                ap.setText("");
                date.setText("");
                stats.setSelectedIndex(0);
   }
      }else{
           JOptionPane.showMessageDialog(null, "Clear The Field First");
      }
    }//GEN-LAST:event_addlblMouseClicked

    private void upMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseClicked
   if(id.getText().isEmpty()){
    JOptionPane.showMessageDialog(null, "Please Select an Item First");
    }else{
            if(cn.getText().isEmpty()||pn.getText().isEmpty()||qn.getText().isEmpty()||ap.getText().isEmpty()
                    ||date.getText().isEmpty()){
      JOptionPane.showMessageDialog(null,"All Fields are Required");
       }else{
       dbConnector dbc = new dbConnector();
       dbc.updateData("UPDATE orders SET cname='"+cn.getText()+"',"
               + " pname = '"+pn.getText()+"', quantity = '"+qn.getText()+"', amount='"+ap.getText()+"', date = '"+date.getText()+"'"
       + "  status = '"+stats.getSelectedItem()+"' WHERE id = '"+id.getText()+"'");
       JOptionPane.showMessageDialog(null,"Updated Successfully!");
                displayData();
                Checkadd=false;
                cn.setText("");
                pn.setText("");
                qn.setText("");
                ap.setText("");
                date.setText("");
                stats.setSelectedIndex(0);
      }
              }
    }//GEN-LAST:event_upMouseClicked

    private void upMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseEntered
        up.setBackground(head);
    }//GEN-LAST:event_upMouseEntered

    private void upMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseExited
        up.setBackground(narv);
    }//GEN-LAST:event_upMouseExited

    private void dltMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltMouseClicked
     Checkadd=false;
     id.setText("");
     cn.setText("");
     pn.setText("");
     qn.setText("");
     ap.setText("");
     date.setText("");
     stats.setSelectedIndex(0);        
    }//GEN-LAST:event_dltMouseClicked

    private void dltMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltMouseEntered
        dlt.setBackground(head);
    }//GEN-LAST:event_dltMouseEntered

    private void dltMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_dltMouseExited
       dlt.setBackground(narv);
    }//GEN-LAST:event_dltMouseExited

    private void OrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OrdersMouseClicked
         int rowIndex = Orders.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel tbl = Orders.getModel();
                 ResultSet rs = dbc.getData("SELECT * FROM orders WHERE id = '"+tbl.getValueAt(rowindex,0)+"'");
                if(rs.next()){
                    
                    id.setText(""+rs.getInt("id"));
                    cn.setText(""+rs.getString("cname"));
                    pn.setText(""+rs.getString("pname"));
                    qn.setText(""+rs.getString("quant"));
                    ap.setText(""+rs.getString("amount"));
                    date.setText(""+rs.getString("date"));
                    stats.setSelectedItem(""+rs.getString("status"));
                    addlbl.setForeground(white);
                    Checkadd = false;
    
                }
            } catch (SQLException ex) {
                System.out.println("Errors: " + ex.getMessage());
            }
            
        }
    }//GEN-LAST:event_OrdersMouseClicked

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        Checkadd=true;
        addlbl.setForeground(white);
        id.setText("");
        cn.setText("");
        pn.setText("");
        qn.setText("");
        ap.setText("");
        date.setText("");
        stats.setSelectedIndex(0);
    }//GEN-LAST:event_clearMouseClicked

    private void clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseEntered
        clear.setBackground(head);
    }//GEN-LAST:event_clearMouseEntered

    private void clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseExited
        clear.setBackground(narv);
    }//GEN-LAST:event_clearMouseExited

    private void cusMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cusMouseClicked
       int rowIndex = cus.getSelectedRow();
       
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel tbl = cus.getModel();
                String query = "SELECT * FROM tbl_user WHERE u_id = '" + tbl.getValueAt(rowIndex, 0) + "'";
                ResultSet rs = dbc.getData(query);
                if (rs.next()) {
                    
                    
                  
                    cn.setText(rs.getString("u_name"));
                    
                    addlbl.setEnabled(false);
                    addlbl.setEnabled(false);
                    addlbl.setForeground(gray);
                    Checkadd=false;
                }
            } catch (SQLException ex) {
                System.out.println("Errors: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_cusMouseClicked

    private void prodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodMouseClicked
          int rowIndex = prod.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel tbl = prod.getModel();
                String query = "SELECT * FROM products WHERE id = '" + tbl.getValueAt(rowIndex, 0) + "'";
                ResultSet rs = dbc.getData(query);
                if (rs.next()) {
                    
                    
                  
                    pn.setText(rs.getString("pname"));
                    
                    addlbl.setEnabled(false);
                    addlbl.setEnabled(false);
                    addlbl.setForeground(gray);
                    Checkadd=false;
                }
            } catch (SQLException ex) {
                System.out.println("Errors: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_prodMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Orders.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Orders().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable Orders;
    private javax.swing.JLabel addlbl;
    public javax.swing.JTextField ap;
    private javax.swing.JLabel clear;
    public javax.swing.JTextField cn;
    private javax.swing.JTable cus;
    public javax.swing.JTextField date;
    private javax.swing.JLabel dlt;
    private javax.swing.JLabel g;
    private javax.swing.JLabel g1;
    private javax.swing.JLabel g2;
    public javax.swing.JTextField id;
    public javax.swing.JLabel image;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JLabel n;
    private javax.swing.JPanel narvar;
    private javax.swing.JLabel p;
    private javax.swing.JLabel p1;
    public javax.swing.JTextField pn;
    private javax.swing.JLabel print;
    private javax.swing.JTable prod;
    public javax.swing.JTextField qn;
    public javax.swing.JButton remove;
    public javax.swing.JButton select;
    public javax.swing.JComboBox<String> stats;
    private javax.swing.JLabel status;
    private javax.swing.JLabel up;
    private javax.swing.JLabel us_id;
    // End of variables declaration//GEN-END:variables
}
