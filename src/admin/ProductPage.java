package admin;

import config.Session;
import config.dbConnector;
import java.awt.Color;
import static java.awt.Color.gray;
import static java.awt.Color.white;
import java.awt.Component;
import java.awt.Image;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.TableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Vilma Gaming
 */
public class ProductPage extends javax.swing.JFrame {

    /**
     * Creates new form userPage
     */
    public ProductPage() {
        initComponents(); 
        displayData();
    }
    
    boolean Checkadd = true;
        
        public void displayData(){
      try{
          dbConnector dbc = new dbConnector();
          ResultSet rs = dbc .getData("SELECT id, pname, price, quantity, category, status FROM products");
          prod.setModel(DbUtils.resultSetToTableModel(rs));
            rs.close();
      }catch(SQLException ex){
         System.out.println("Errors:"+ex.getMessage());
    }
    }
   
     Color narv=new Color(102,102,255);
    Color head=new Color(153,153,255);
    Color bodyc=new Color(204,204,255);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        narvar = new javax.swing.JPanel();
        adds = new javax.swing.JPanel();
        addlbl = new javax.swing.JLabel();
        delete = new javax.swing.JPanel();
        clear = new javax.swing.JLabel();
        update = new javax.swing.JPanel();
        up = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        prod = new javax.swing.JTable();
        s = new javax.swing.JLabel();
        st = new javax.swing.JTextField();
        status = new javax.swing.JLabel();
        us = new javax.swing.JComboBox<>();
        p = new javax.swing.JLabel();
        pid = new javax.swing.JTextField();
        name = new javax.swing.JTextField();
        n = new javax.swing.JLabel();
        g = new javax.swing.JLabel();
        pr = new javax.swing.JTextField();
        cate = new javax.swing.JLabel();
        cat = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(0, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(204, 255, 255));
        jPanel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jPanel2.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Century Gothic", 1, 24)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("PRODUCT PAGE");
        jPanel2.add(jLabel2);
        jLabel2.setBounds(0, 0, 230, 50);

        jLabel1.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("BACK");
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });
        jPanel2.add(jLabel1);
        jLabel1.setBounds(390, 0, 60, 50);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 0, 470, 50));

        narvar.setBackground(new java.awt.Color(255, 255, 255));
        narvar.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        adds.setBackground(new java.awt.Color(51, 255, 255));
        adds.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addsMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addsMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addsMouseExited(evt);
            }
        });
        adds.setLayout(null);

        addlbl.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        addlbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        addlbl.setText("ADD");
        addlbl.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                addlblMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                addlblMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                addlblMouseExited(evt);
            }
        });
        adds.add(addlbl);
        addlbl.setBounds(0, 0, 170, 40);

        narvar.add(adds, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 200, 170, 40));

        delete.setBackground(new java.awt.Color(102, 255, 255));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        delete.setLayout(null);

        clear.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        clear.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        clear.setText("Clear");
        clear.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                clearMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                clearMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                clearMouseExited(evt);
            }
        });
        delete.add(clear);
        clear.setBounds(0, 0, 170, 40);

        narvar.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 170, 40));

        update.setBackground(new java.awt.Color(102, 255, 255));
        update.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                updateMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                updateMouseExited(evt);
            }
        });
        update.setLayout(null);

        up.setFont(new java.awt.Font("Century Gothic", 1, 18)); // NOI18N
        up.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        up.setText("UPDATE");
        up.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                upMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                upMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                upMouseExited(evt);
            }
        });
        update.add(up);
        up.setBounds(0, 0, 170, 40);

        narvar.add(update, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 250, 170, 40));

        jPanel1.add(narvar, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 170, 520));

        prod.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {}
            },
            new String [] {

            }
        ));
        prod.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                prodMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(prod);

        jPanel1.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 60, 400, 160));

        s.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        s.setText("Stock Quantity:");
        jPanel1.add(s, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 100, 30));

        st.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        st.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(st, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 370, 130, 30));

        status.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        status.setText("Status:");
        jPanel1.add(status, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 460, 100, 20));

        us.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Available", "Sold-out", " ", " " }));
        jPanel1.add(us, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 450, 130, 30));

        p.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        p.setText("Product ID:");
        jPanel1.add(p, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 100, 30));

        pid.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pid.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(pid, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 250, 130, 30));

        name.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        name.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(name, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 290, 130, 30));

        n.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        n.setText("Product Name:");
        jPanel1.add(n, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 100, 30));

        g.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        g.setText("Price:");
        jPanel1.add(g, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 100, 30));

        pr.setFont(new java.awt.Font("Arial", 1, 12)); // NOI18N
        pr.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jPanel1.add(pr, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 330, 130, 30));

        cate.setFont(new java.awt.Font("Century Gothic", 1, 12)); // NOI18N
        cate.setText("Category:");
        jPanel1.add(cate, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 420, 100, 20));

        cat.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Cake", "Pastry", "Bread" }));
        jPanel1.add(cat, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 410, 130, 30));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 633, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 522, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
     admindashboard ad = new admindashboard();
      ad.setVisible(true);
      this.dispose();       
    }//GEN-LAST:event_jLabel1MouseClicked

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
      
    }//GEN-LAST:event_formWindowActivated

    private void addsMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addsMouseExited

    }//GEN-LAST:event_addsMouseExited

    private void addsMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addsMouseEntered

    }//GEN-LAST:event_addsMouseEntered

    private void addsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addsMouseClicked
      
    }//GEN-LAST:event_addsMouseClicked

    private void addlblMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseExited
        adds.setBackground(narv);
    }//GEN-LAST:event_addlblMouseExited

    private void addlblMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseEntered
        adds.setBackground(head);
    }//GEN-LAST:event_addlblMouseEntered

    private void addlblMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_addlblMouseClicked
        if(Checkadd){
           if(name.getText().isEmpty()||pr.getText().isEmpty()||st.getText().isEmpty() ){
            JOptionPane.showMessageDialog(null,"All Fields are Required");
           }else{
                dbConnector dbc = new dbConnector();
                dbc.insertData("INSERT INTO products(id, pname, price, quantity, category, status)"
                   + "VALUES('"+pid.getText()+"', '"+name.getText()+"', '"+pr.getText()+"', '"+st.getText()+"', '"+cat.getSelectedItem()+"', '"+us.getSelectedItem()+"')");
                JOptionPane.showMessageDialog(null,"Successfully Added!");
                displayData();
                
                Checkadd=true;
                addlbl.setForeground(white);
                pid.setText("");
                name.setText("");
                pr.setText("");
                st.setText("");
                cat.setSelectedIndex(0);
                us.setSelectedIndex(0);
           }
      }else{
           JOptionPane.showMessageDialog(null, "Clear The Field First");
      }
    }//GEN-LAST:event_addlblMouseClicked

    private void prodMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_prodMouseClicked
        int rowIndex = prod.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an Item!");
        } else {
            try {
                dbConnector dbc = new dbConnector();
                TableModel tbl = prod.getModel();
                String query = "SELECT * FROM products WHERE id = '" + tbl.getValueAt(rowIndex, 0) + "'";
                ResultSet rs = dbc.getData(query);
                if (rs.next()) {
                    
                    
                    pid.setText(rs.getString("id"));
                    name.setText(rs.getString("pname"));
                    pr.setText(rs.getString("price"));
                    st.setText(rs.getString("quantity"));
                    us.setSelectedItem(rs.getString("category"));
                    us.setSelectedItem(rs.getString("status"));
                    addlbl.setEnabled(false);
                    addlbl.setEnabled(false);
                    addlbl.setForeground(gray);
                    Checkadd=false;
                }
            } catch (SQLException ex) {
                System.out.println("Errors: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_prodMouseClicked

    private void clearMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseClicked
        Checkadd=true;
        addlbl.setForeground(white);
        pid.setText("");
        name.setText("");
        pr.setText("");
        st.setText("");
        cat.setSelectedIndex(0);
        us.setSelectedIndex(0);
    }//GEN-LAST:event_clearMouseClicked

    private void clearMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseEntered
       clear.setBackground(head);
    }//GEN-LAST:event_clearMouseEntered

    private void clearMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_clearMouseExited
       clear.setBackground(narv);
    }//GEN-LAST:event_clearMouseExited

    private void upMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseClicked
   if(pid.getText().isEmpty()){
    JOptionPane.showMessageDialog(null, "Please Select an Item First");
    }else{
     if(name.getText().isEmpty()||pr.getText().isEmpty()||st.getText().isEmpty() ){
      JOptionPane.showMessageDialog(null,"All Fields are Required");
       }else{
       dbConnector dbc = new dbConnector();
       dbc.updateData("UPDATE products SET pname='"+name.getText()+"',"
               + " price='"+pr.getText()+"', quantity='"+st.getText()+"', category='"+cat.getSelectedItem()+"', status='"+us.getSelectedItem()+"' WHERE id='"+pid.getText()+"'");
       JOptionPane.showMessageDialog(null,"Updated Successfully!");
       displayData();
       Checkadd=true;
       addlbl.setForeground(white);
       pid.setText("");
       name.setText("");
       pr.setText("");
       st.setText("");
       cat.setSelectedIndex(0);
       us.setSelectedIndex(0);
           }
       }
    }//GEN-LAST:event_upMouseClicked

    private void upMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseEntered
        up.setBackground(head);
    }//GEN-LAST:event_upMouseEntered

    private void upMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_upMouseExited
        up.setBackground(narv);
    }//GEN-LAST:event_upMouseExited

    private void updateMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseClicked
    
    }//GEN-LAST:event_updateMouseClicked

    private void updateMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseEntered
       update.setBackground(head);
    }//GEN-LAST:event_updateMouseEntered

    private void updateMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateMouseExited
        update.setBackground(narv);
    }//GEN-LAST:event_updateMouseExited

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteMouseClicked

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
        delete.setBackground(head);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
        delete.setBackground(narv);
    }//GEN-LAST:event_deleteMouseExited

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ProductPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ProductPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel addlbl;
    private javax.swing.JPanel adds;
    public javax.swing.JComboBox<String> cat;
    private javax.swing.JLabel cate;
    private javax.swing.JLabel clear;
    private javax.swing.JPanel delete;
    private javax.swing.JLabel g;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel n;
    public javax.swing.JTextField name;
    private javax.swing.JPanel narvar;
    private javax.swing.JLabel p;
    public javax.swing.JTextField pid;
    public javax.swing.JTextField pr;
    private javax.swing.JTable prod;
    private javax.swing.JLabel s;
    public javax.swing.JTextField st;
    private javax.swing.JLabel status;
    private javax.swing.JLabel up;
    private javax.swing.JPanel update;
    public javax.swing.JComboBox<String> us;
    // End of variables declaration//GEN-END:variables
}
